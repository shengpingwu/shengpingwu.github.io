{"version":3,"sources":["component/Videoplayerlist.tsx","component/Videoplayer.tsx","component/VideoPlayerPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Videoplayerlist","useState","videolist","name","logo","url","history","useHistory","Table","striped","bordered","hover","map","item","i","Button","onClick","pName","pLogo","pUrl","console","log","detailVideo","push","pathname","state","detail","handleShowChannel","Figure","Image","width","height","src","country","initialOptions","controls","fluid","controlBar","volumePanel","inline","VideoPlayer","props","player","videoNode","options","undefined","this","videojs","ready","dispose","className","data-vjs-player","ref","node","React","VideoPlayerPage","location","useLocation","nameVideo","logoVideo","videoUrl","useEffect","videoJsOptions","autoplay","sources","type","goBack","App","from","to","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbb4c9bd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport videolist from \"../asset/data/iptv.json\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport { Button, Figure, Table } from \"react-bootstrap\";\r\nimport { IVideoPlayerPage } from './VideoPlayerPage'\r\n\r\nconst Videoplayerlist = () => {\r\n  const [nameVideo, SetNameVideo] = useState<string>(videolist[0].name);\r\n  const [logoVideo, SetLogoVideo] = useState<string>(videolist[0].logo);\r\n  const [videoUrl, SetVideoUrl] = useState<string>(videolist[1].url);\r\n\r\n  const showVideo = (name: string, logo: string, url: string) => {\r\n    SetNameVideo(name);\r\n    SetLogoVideo(logo);\r\n    SetVideoUrl(url);\r\n  };\r\n\r\n  let history = useHistory();\r\n\r\n  const handleShowChannel = (pName: string, pLogo: string, pUrl: string) => {\r\n    console.log(\"Videoplayerlist.name: \" + pName);\r\n    console.log(\"Videoplayerlist.logo: \" + pLogo);\r\n    console.log(\"Videoplayerlist.url: \" + pUrl);\r\n    let detailVideo: IVideoPlayerPage = {\r\n      name: pName, \r\n      logo: pLogo,\r\n      url: pUrl\r\n    }\r\n    history.push({\r\n      pathname: '/channel',\r\n      state: {detail: detailVideo}\r\n    })\r\n  }\r\n  return (\r\n    <div>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Ver</th>\r\n            <th>Canal</th>\r\n            <th>Logo</th>\r\n            <th>Idioma</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {videolist.map((item, i) => {\r\n            return (\r\n              <tr key={i}>\r\n                <td>\r\n                <Button onClick={()=>{handleShowChannel(item.name, item.logo, item.url)}}>Show</Button>\r\n                </td>\r\n                <td>{item.name}</td>\r\n                <td><Figure>\r\n                    <Figure.Image\r\n                      width={60} height={50} src={item.logo}  />\r\n                   </Figure>\r\n                </td>\r\n                <td>{item.country.name}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Videoplayerlist;\r\n","import * as React from \"react\";\r\nimport videojs from \"video.js\";\r\n\r\nimport \"video.js/dist/video-js.css\";\r\n\r\ninterface VideoPlayerPropsInferface {\r\n  videoJsOptions: videojs.PlayerOptions;\r\n}\r\n\r\nconst initialOptions: videojs.PlayerOptions = {\r\n    controls: true,\r\n    fluid: true,\r\n    controlBar: {\r\n      volumePanel: {\r\n        inline: false\r\n      }\r\n    }\r\n  };\r\n\r\nclass VideoPlayer extends React.Component {\r\n  private player?: videojs.Player;\r\n  private videoNode?: HTMLVideoElement;\r\n  private options: VideoPlayerPropsInferface;\r\n\r\n  constructor(props: VideoPlayerPropsInferface) {\r\n    super(props);\r\n    this.player = undefined;\r\n    this.videoNode = undefined;\r\n    this.options = props;\r\n  }\r\n\r\n  componentDidMount() {\r\n    // instantiate video.js\r\n    this.player = videojs(this.videoNode, {...initialOptions, ...this.options}).ready(function () {\r\n      console.log('onPlayerReady', this);\r\n    });\r\n  }\r\n\r\n  // destroy player on unmount\r\n  componentWillUnmount() {\r\n    if (this.player) {\r\n      this.player.dispose();\r\n    }\r\n  }\r\n\r\n  // wrap the player in a div with a `data-vjs-player` attribute\r\n  // so videojs won't create additional wrapper in the DOM\r\n  // see https://github.com/videojs/video.js/pull/3856\r\n  render() {\r\n    return (\r\n      <div className=\"c-player\">\r\n        <div className=\"c-player__screen\" data-vjs-player=\"true\">\r\n          <video\r\n            ref={(node: HTMLVideoElement) => (this.videoNode = node)}\r\n            className=\"video-js\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VideoPlayer;\r\n","import { Figure } from \"react-bootstrap\";\r\nimport VideoPlayer from \"./Videoplayer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useHistory} from \"react-router-dom\";\r\nimport {Button} from 'react-bootstrap';\r\n\r\n\r\nexport interface IVideoPlayerPage {\r\n  name: string;\r\n  logo: string;\r\n  url: string;\r\n}\r\n\r\ninterface LocationState {\r\n    detail: IVideoPlayerPage\r\n};\r\n\r\nconst VideoPlayerPage = () => {\r\n  const location = useLocation<LocationState>();\r\n  const [nameVideo, SetNameVideo] = useState<string>(location.state.detail.name);\r\n  const [logoVideo, SetLogoVideo] = useState<string>(location.state.detail.logo);\r\n  const [videoUrl, SetVideoUrl] = useState<string>(location.state.detail.url);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    console.log(\"Name: \" + nameVideo);\r\n    console.log(\"Logo: \" + logoVideo);\r\n    console.log(\"URL: \" + videoUrl);\r\n  }, []);\r\n\r\n  const navBack = () => {\r\n    history.goBack();\r\n  }\r\n  const videoJsOptions = {\r\n    autoplay: false,\r\n    controls: true,\r\n    sources: [\r\n      {\r\n        //src: 'http://vjs.zencdn.net/v/oceans.mp4',\r\n        //src: 'https://y5w8j4a9.ssl.hwcdn.net/andprivehd/tracks-v1a1/index.m3u8',\r\n        src: videoUrl,\r\n        //type: 'video/mp4'\r\n        type: \"application/x-mpegURL\",\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>{nameVideo}</h1>\r\n      <Figure>\r\n        <Figure.Image width={60} height={50} src={logoVideo} />\r\n      </Figure>\r\n      <VideoPlayer {...videoJsOptions} />\r\n      <Button onClick={() => navBack()}>Back</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayerPage;\r\n","import React from 'react';\nimport Videoplayerlist from './component/Videoplayerlist';\nimport VideoPlayerPage from './component/VideoPlayerPage';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Redirect from=\"/\" to=\"/home\" />\n        <Switch>\n            <Route path=\"/home\" component={Videoplayerlist} />\n            <Route path=\"/channel\" component={VideoPlayerPage} />\n            <Route path=\"*\" component={() => <div>404</div> } />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}